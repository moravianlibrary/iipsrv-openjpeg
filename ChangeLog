13/08/2012:
	- Detect JPEG YCbCr encoding in TIFF and request conversion to RGB
	  by libtiff. Tile _TIFFmalloc() now only occurs in getTile().


16/07/2012:
	- Added check to KakaduImage.cc to handle bilevel images.
	- Clean up to use only floats and floorf() in Transforms.cc.


14/05/2012:
	- Added bilinear interpolation option for CVT resizing. Added
	  INTERPOLATION parameter to Environment.h, which takes an integer.
	  0 for fastest nearest neighbour and 1 for bilinear (default).
	  Current bilinear implementation 2.5x slower than nearest neighbour.
	- Additional fix to MAX_LAYERS code.


11/05/2012:
	- Modified layer handling to decode all available layers if
	  MAX_LAYERS parameter is set to -1.


08/05/2012:
	- Fix to Mac OSX and FreeBSD compilation of KakaduImage.cc.


07/05/2012:
	- Fixed strip height calculation error in CVT.cc


01/05/2012:
	- Modified memory handling in JPEGCompressor.cc to better handle
	  images where the compressed version may be bigger than the
	  original (for example at very high quality levels).
	- Changes to CVT.cc to work with new JPEGCompressor code and removal
	  of chunked encoding header directive from CVT.cc.
	- Fixed bug in CVT when specifying both WID and HEI.
	- Fixed compiler warning in IIPResponse.cc.
	- Added man page.
	- Added missing definition of get_nprocs() function to Kakadu.cc
	  for Mac OSX and FreeBSD.


20/04/2012:
	- Fixed memory overun error in filter_contrast in Transforms.cc.


18/04/2012:
	- Major rewrite of CVT code to unify TIFF and JPEG2000 region
	  export. Region compositing now in TileManager->getRegion with
	  modified getRegion Kakadu function. Changes also to View class
	  and ColourTransforms code to enable greater modularity for
	  image processing to regions. ColourTransforms renamed to
	  Transforms.
	  Thanks to The National Library of Wales, who will be using
	  iipsrv & iipmooviewer to deliver their Historic Newspapers
	  in 2012.


21/03/2012:
	- Fix to TPTImage.c to force RGB conversion for YCbCr compressed
	  JPEG TIFFs, which is now the default in VIPS. Thanks to John
	  Cupitt for spotting this.


17/03/2012:
	- Changes to View.[h,cc] to make sure getRequestWidth and Height
	  return correctly rounded values.


12/03/2012:
	- Added HTTP Status: 400 Bad Request to error messages.


28/01/2012:
	- Fixes to KakaduImage.cc to properly catch exceptions during file
	  opening and a check for existence during codestream shutdown.
	- Also added a check to updateTimeStamp to throw an exception if file
	  unreadable.


28/08/2011:
	- Performance improvement to JPEG2000 16->8 bit downsampling. Now
	  using integer arithmetic rather than float.


24/08/2011:
	- Updates to configure.in, FIF.cc and DeepZoom.cc to check for and
	  handle missing setenv, unsetenv and log2 functions. Fixes problem
	  on Solaris 10.


02/08/2011:
	- Changed timegm function in FIF.cc to use more cross-platform POSIX
	  mktime function instead. Fixes compilation error on Solaris.


22/07/2011:
	- Added 16bit and CIELAB support for JPEG2000.
	- Other minor cleanups.


24/05/2011:
	- Fix added to DeepZoom.cc as FreeBSD does not have the log2 function.
	  Thanks to Andrew Hankinson for spotting this.


23/05/2011:
	- Another fix to ensure the max layers variable is correctly used in
	  Zoomify and DeepZoom output.


15/04/2011: Version 0.9.9 Released


15/04/2011:
	- Fix to View.h to properly take into account max layers variable.


14/04/2011:
	- Minor logging update to Zoomify.cc.


13/04/2011:
	- Updated VC++ project files.
	- Minor changes to logging in Main.cc.
	- Updated autoconf files.


08/04/2011:
	- Change to TileManager.cc to take into account whether a tile is padded
	  or not when applying a watermark.


06/04/2011:
	- Changes to allow compilation on Windows with Visual C++ Express 2010.
	  New windows subfolder with missing time definitions and VC solution file.
	  Fixes also include definition of snprintf, log2 and S_ISREG, which are
	  all missing in Windows. Many thanks to Rob "Bubba" Hines for his help in
	  porting.


21/03/2011:
	- Added extra NULL assignment to Task pointer after catch block to avoid
	  problems with uninitialized memory being deleted.
	- Added SIGINT handler for Ctrl-C interruptions with strsignal() to
	  display a more meaningful message.


17/03/2011:
	- Clean-up of signed/unsigned variables in IIPImage.h and KakaduImage.h.


15/03/2011:
	- Added sanity check for requested resolutions and tiles in JTL.cc.
	- Fixed problem with edge tiles and watermarking.
	- Clean-up of error message in TPTImage.cc.


14/03/2011:
	- Fixed problem with standalone mode. Can now bind to an FCGI socket by
	  running iipsrv on the command line with the argument --bind.
	  For example: ./iipsrv.fcgi --bind localhost:9000
	- Fixed memory problem reported by valgrind with 16bit images.
	  Now simply use memcpy instead of re-assigning memory blocks. Changes to
	  JTL.cc, DeepZoom.cc and Zoomify.cc.
	- Added extra buffer overhead during JPEG compression.
	- Minor fixes to buffer copy code in Writer.h.
	- Fixed memory leak in Memcached code - need to explicitly free returned
	  objects!


01/12/2010:
	- Modified Main.cc to not check in Memcached if there has been a
	  If-Modified-Since parameter sent and to not store 304 or error replies.
	  Otherwise we risk to send 304 replies to requests from uncached browsers.


25/11/2010:
	- Removed final CRLF from JTL, Zoomify and DeepZoom requests, which causes
	  problems with http pipelining in firefox.


24/11/2010:
	- Added extra checks to both TPTImage and KakaduImage for whether the
	  requested resolution exists.
	- Added ability to KakaduImage to downsize resolutions that were not generated
	  during encoding.
	- Added decompressor.finish() to catch block as finish crashes if called after
	  thread environment shut down.


18/11/2010:
	- Fixed problem when clipping when applying watermarks for both 8 and 16 bit images.


15/11/2010:
	- Added memcached support via libmemcached. List of servers passed via
	  MEMCACHED_SERVERS environment variable. Length of time the cache
	  remains valid set by optional MEMCACHED_TIMEOUT environment variable
	  (default is 3600 seconds). Storage is at output level, rather than tile
	  level, so is complementary to internal tile cache.
	  Thanks to Moravian Library in Brno (Moravska zemska knihovna v Brne,
	  http://www.mzk.cz/) R&D grant MK00009494301 & Old Maps Online
	  (http://www.oldmapsonline.org/) from the Ministry of Culture
	  of the Czech Republic.


06/11/2010:
	- Modification to Cache.h to use string::capacity() function instead of length()
	  to determine space used by string.


31/10/2010:
	- Added simple watermarking support via Watermark class. New environment
	  variables added for the watermark image, the opacity and probability.
	  Changes mainly to the TileManager and Session class. Watermarking happens
	  transparently within the TileManager class for all tiles. Thanks to
	  Moravian Library in Brno (Moravska zemska knihovna v Brne, http://www.mzk.cz/)
	  R&D grant MK00009494301 & Old Maps Online (http://www.oldmapsonline.org/)
	  from the Ministry of Culture of the Czech Republic.


15/09/2010:
	- Modified IIPImage.cc to enable handling of images with spectral band
	  indices with mixtures of 3 or 4 digits. For example, H1_pyr_000_090.tif
	  and H1_pyr_2500_090.tif.


05/03/2010:
	- Another fix to JPEGCompressor.cc to fix a crash with very small
	  tiles with libjpeg-8.


23/02/2010:
	- Modified JPEGCompressor.cc to fix compatibility problem with
	  libjpeg version 8. Simply removed jpeg_write_tables from
	  InitCompression function.


09/02/2010:
	- Fixed memory leak in Zoomify.cc and DeepZoom.cc


11/01/2010:
	- JPEG2000 support added via the Kakadu SDK. Added new class
	  KakaduImage derived from the IIPImage class. JPEG2000 support
	  added thanks to Moravian Library in Brno (Moravska zemska knihovna
	  v Brne, http://www.mzk.cz/) R&D grant MK00009494301 & Old Maps Online
	  (http://www.oldmapsonline.org/) from the Ministry of Culture of
	  the Czech Republic.
	- Fix to string literal warnings in Writer.h


08/01/2010:
	- Major changes to the HTTP headers sent by iipsrv. Added
	  HTTP Server id and Last-Modified timestamps to all server output.
	  Checks are now made for a If-Modified-Since response and a
	  304 Not Modified reponse returned if the timestamps match.
	  This should significantly improve server performance.


04/01/2010:
	- Fixed bug in FIF.cc - the file system prefix was not being
	  initialized for each new image.
	- Layers environment variable changed to MAX_LAYERS to represent
	  the maximum number of layers user is allowed to decode.


03/12/2009: Version 0.9.8 Released


02/12/2009:
	- Adding missing include to IIPImage.cc for compilation with
	  gcc 4.4.1


01/12/2009:
	- Added DeepZoom protocol support. Work carried out thanks to
	  Moravian Library in Brno (Moravska zemska knihovna v Brne,
	  http://www.mzk.cz/) R&D grant MK00009494301 & Old Maps Online
	  (http://www.oldmapsonline.org/) from the Ministry of Culture of
	  the Czech Republic.


29/11/2009:
	- Added SPECTRA.cc class for returning spectral reflectance values
	  from multispectral images.
	- Fix to IIPImage.cc to properly count the number of horizontal and
	  vertical angles (used for multispectral bands).


26/11/2009:
	- Fix to View class to take resampling into account when limiting
	  the CVT output size to the maximum server setting.


17/11/2009:
	- Update to Zoomify to fix way it calculates number of zoom levels.


05/11/2009:
	- Updated the autoconf, aclocal, automake and libtool scripts to the 
	  latest versions.


04/11/2009:
	- Added FILESYSTEM_PREFIX environment variable to allow a fixed prefix to
	  be applied to all image paths. Embedded NULL bytes of the form %00 and
	  any "../" are also now stripped out of any path for security reasons.
          (Thanks to Willem Hengeveld for suggesting this)


01/11/2009:
	- Fixes to View.h and View.cc to set the requested size to the maximum
	  allowable if not WID or HEI is set for the CVT command. The correct
	  resolution to use for CVT is now calculated for views smaller than
	  the smallest available.


30/10/2009:
	- Security fixes to Task.cc to make sure while loop is limited to the
	  expected number of arguments. (Thanks to Willem Hengeveld for pointing
	  this out).
	

19/08/2009:
	- Minor updates to IIPImage.h and IIPImage.cc. FIF.cc also now tests
	  for upper/lowercase .tif and .tiff suffixes.


14/08/2009:
	- Modification to View.cc and CVT.cc to calculate the appropriate
	  resolution as the smallest resolution with a dimension greater size
	  than the requested dimensions. The WID and HEI directives now
	  effectively give bounding dimensions.

11/08/2009:
	- Added simple nearest neighbour resampling to CVT command to allow it to
	  resize to the exact dimensions and not just the nearest available pyramid
	  resolution.
	- CVT Content-disposition tag now gives the image filename allowing the user
	  to save the image directly with this.


01/07/2009:
	- Added quality layer parameter to images for future use with file formats
	  such as JPEG2000 that support this. This allows the decoding of several
	  quality layers via the LYR command. Modifications to the RawTile API
	  as well as IIPImage::getTile resulting in a series of changes to
	  CVT.cc, JTL.CC, TIL.cc, TPTImage.cc, View.h, Main.cc and Environment.h.
	  New startup configuration "LAYERS" to set the default number of layers.
	  Default is 1 otherwise.


22/06/2009:
	- Changes to Zoomify.cc to take into account the fact that Zoomify expects
	  a fixed number of resolution levels.


15/04/2009:
	- Added a flag for padded tiles into RawTile.h. TIFF's are padded out
	  to the tile size, but other formats may not be. Changes to TPTImage,
	  TileManager and CVT to handle this.
	- Also changed the RawTile flag for memory managed tiles.


18/03/2009:
	- Added modification timestamps to the IIPImage and Rawtile classes.
	  The TileManager now checks whether the tile is fresh and reloads it
	  if necessary.


11/03/2009:
	- Several changes to JTL.cc and Cache.h to eliminate a memory leak. Also
	  replaced malloc/free in Rawtile with new/delete.


04/03/2009:
	- Minor changes to IIPResponse.cc to elimate type warnings.


06/06/2008:
	- Modifed the way the image dimensions are stored in the IIPImage class.
	  Rather than simply storing the max size, a vector of available dimensions
	  is saved making it easier to get the size for a given resolution.


05/06/2008:
	- Added Zoomify support via the Zoomify=/path.tif request. Works with both
	  the official flash client and the Zoomify patched OpenLayers javascript
	  client. Work carried out thanks to R&D grant DC08P02OUK006 - Old Maps
	  Online (www.oldmapsonline.org) from Ministry of Culture of the Czech Republic.


09/08/2007:
	- Added a Bits-per-channel OBJ request so that viewers can determine whether
	  to perform contrast adjustment server-side or client-side.


07/08/2007:
	- Added CIELAB conversion and contrast handling to JTL so that it can handle
	  16 bit images.


12/06/2007:
	- Updated URL decoding function in FIF.cc to C++ style and avoid a potential
	  buffer overflow.
	- Changed Task::run arguments to be const std::string& instead of just std::string.


08/06/2007:
	- Changed JTL headers to enable HTTP 1.1 compatible cache control.


13/12/2006: Version 0.9.7 Released


07/11/2006:
	- Fixed the standalone mode, which is now activated by launching with
	  --standalone with an argument giving the socket port or path. For example,
	  localhost:8000 or /tmp/iipsrv.sock.


31/10/2006:
	- Added hillshading Task class and function for simulated raking light
	  visualization using 3D surface normal data. This is used via the SHD
	  command in association with CVT, which takes 2 arguments: the horizontal
	  light source angle in degrees and the vertical angle from the horizontal
	  plane.


26/09/2006:
	- Cleaned up the hash_map and pool_allocator stuff a little to use typedefs
	  instead of #ifdefs.
	- Added the legacy JTLS command class for panoramic views.


22/09/2006:
	- Added an FCGI stand-alone mode usable with lighttpd's spawn-fcgi command.
	- Also changed the IIPImage cache to use a hash_map and pool_alloc memory.


19/09/2006:
	- If we are using appropriate versions of g++, we now use the high
	  performance pool_alloc memory allocators for our cache containers.
	  Also, instead of a std::map, we use the hash_map extension which
	  offers better performance. Otherwise we default to std::map.
	- Fixed problem in TileManager where uncompressed tiles in the cache
	  were not being cropped when converted to JPEG. The IIPImage tile_width
	  and tile_height fields now hold the base tile size and not the current
	  tile size.


18/092006:
	- Added a "Last-Modified" and "ETag" header to the CVT HTTP response
	  to prevent double requests from being made by web browsers.
	- Fixed bug in CVT where the tile size was being incorrectly set from
	  the IIPImage object and not the tile itself, which was a problem
	  when getting tiles from the cache.


15/09/2006:
	- Changed the Cache keys to be simple strings rather than custom
	  objects. This has solved one of the crashing problems when tiles
	  are deleted from the cache.


29/08/2006:
	- Added Writer class to shield the command implentations from any
	  FCGI specific functions.


28/08/2006:
	- *Major* refactoring of the code. Each command is now called via its own
	  Task class (command pattern), with no processing done in Main.cc.
	  OBJ commands are in OBJ.cc and each output command (eg TIL,CVT etc)
	  now have their own classes.
	- The xangle and yangle variables are now in the View class, which
	  was previously named the ImageTransform class.


25/08/2006:
	- Cleaned up the option variable parsing in Main.cc. It is now mostly
	  done via an Environment class, which checks for defaults etc.


16/08/2006:
	- Moved QLT limit checking from Main into JPEG class. Also now check
	  for empty strings.


08/08/2006:
	- Changed the contrast adjustment code to limit the result to a max of
	  255.0 as this was creating problems with the windows build.


07/03/2006: Version 0.9.6 release.


13/02/2006:
	- Fixed another problem on Mac OS X in TPTImage.cc. The number of
	  channels and bits per sample were giving strange values, so a
	  temporary uint16 variable is now used and cast from. It now works
	  perfectly on Mac :-)


09/02/2006:
	- Changed the start_t and start_u types in Timer.h to long for
	  compatibility with Solaris and Mac OS X.
	- Some code cleanups in the IIPResponse class.


23/01/2006:
	- Added an extra timer for tile insertion - this is the slowest
	  cache operation. We should look to put this in a separate
	  thread at some point!


18/01/2006:
	- Added support for ptif suffix images. These are in fact just
	  pyramidal TIFF images.


11/01/2006:
	- More fixes to the TileManager class. Cache can now handle
	  multiple compression types for the same tile simultaneously.


24/12/2005:
	- Major rewrite of the TileManager class. Now much more concise.


21/10/2005:
	- Added a check in JPEGCompressor for the number of channels.
	  JPEG can handle only image with either 1 or 3 channels.


13/10/2005:
	- Added a TileManager class to act as a higher level access to
	  the tile cache. It checks whether a JPEG compressed tile
	  already exists and if not decodes one from the source image.
	  It also crops any edge tiles to the correct size (required
	  for the new Vips TIFF format).


12/10/2005:
	- Fixed a JTL problem with the new tiled TIFF format. The edge
	  tiles are now cropped before being sent out.
	- Reworked JTL to just forward the request to JTLS rather than
	  duplicating the code there.


09/06/2005:
	- Changed IIPImage.cc to use glob conditionally if glob has been
	  detected. This is needed for mingw compilation.


01/04/2005:
	- Completed an LRU tile cache with the ability to set the max
	  cache size via the configuration variable MAX_IMAGE_CACHE_SIZE,
	  specified in MB.


22/03/2005:
	- Added new Timer class to handle timing data to debug tile
	  access, command and total request times.


06/01/2005:
	- Found problem in the CVT code when dealing with image sequences
	  of different numbers of channels. We have to reload the channel
	  information.


15/12/2004:
	- CVT now works with the new standard compliant TIFF tile format
	  as used by vips-7.10 and later.


10/12/2004:
	- CVT now works with 16 bit TIFF. The compression type reported
	  by TIL also switches from JPEG with 8 bit images to none with
	  16 bit.


08/12/2004:
	- Added CNT contrast command support. Also added check to
	  TPTImage openImage() for whether our image is in fact
	  tiled or not, which can cause the server to crash.


07/12/2004:
	- Added 16 bit support. Changes to RawTile - the data is now
	  a generic (void*) and there are now fields for channels per
	  sample and bits per channel. Changes also to TPTImage.cc,
	  Main.cc and JPEGCompressor.cc.


01/09/2004:
	- Changed the LAB2sRGB code to allow a/b values from
	  +-127 as per the TIFF spec instead +-100.
	- Also fixed a problem caused by signed/unsigned comparisons
	  in ImageTransform with requests for CVT sizes smaller than
	  the tile size.


26/08/2004:
	- Added largefile support by simply adding a configure
	  directive that will add the appropriate defines.


05/07/2004:
	- Fixed problem in JPEGCompressor.cc concerning the value of
	  a structure that we try to read after de-allocating memory.
	  Only seems to be a problem with MSVC++ compiler. (Thanks to
	  Chris Tuijn for spotting this).


11/05/2004: Version 0.9.5 release.


04/05/2004:
	- Moved the colorspace check from TPTImage::getTile to
	  TPTImage::openImage so that a Colorspace request will always
	  have an associated colour space and not just after getTile
	  has been called. We assume for now that all the tiles of an
	  image are all of the same colour space.


21/05/2004:
	- Removed no-cache pragma from CVT header. Also modified
	  max_CVT variable to limit the effective size and not the
	  total image size. ie a small RGN of a massive image can
	  still be sent OK. The resolution calculations have been
	  moved into ImageTransform and is now performed at the last
	  moment in the CVT section.


16/05/2004:
	- Added MAX_CVT environment variable to limit width and height
	  requests of CVT commands. The default is set to 5000 pixels.


02/04/2004:
	- Added SDS command support. This can be used for specifying
	  subimages or the horizontal/vertical angle in 3D sequence
	  images and will eventually replace the use of JTLS by the
	  client. Current usage is SDS=h,v where h and v are the
	  horizontal and vertical sequence angles.


01/04/2004:
        - Fixed length given by the error response. We now count both
          the code and the argument.
 
 
30/03/2004:
        - Fixed TIL to only send the MIME type once before the tile
          sequence.
        - Added better error handling. The IIPResponse is now set
          whenever we have a problem in Main.cc. Plus the catch
          clause now checks for an error in IIPResponse and sends
          this if available rather than the advertising banner.
 
 
29/03/2004:
        - Changed the vertical and horizontal views syntax back to
          old style.
        - Fixed problem with the number of CRLF's after the MIME type:
          Apache complains if there are not 2 sets of CRLF.
        - Changed the IIPImage metadata map to use the string class
          rather than char* - seems to fix a freeze problem.
 

06/03/2004:
	- More fixes to RGN code. Moved the verification logic into
	  the ImageTransform class itself rather than having it in
	  Main.cc. Also fixed a crash resulting from the use of
	  inlining - a gcc bug perhaps? Anyway, now perfectly stable.


05/03/2004:
	- Some minor fixes to the RGN code to prevent crashes from
	  images of less than 8 pixels in size.


04/03/2004:
	- Finished implementation of RGN CVT modifier. Can now specify
	  a region to CVT rather than always having the whole image.
	- Updated embedded XHTML advertising page.
	- Some doxygen-related cleanups and documenting.


03/03/2004:
	- Changed Horizontal-views and Vertical-views return syntax to
	  return the number of views also (request by Denis):
	  Vertical-views/<number views>:view1 view2 ...
	  eg. Vertical-views/3:0 90 180.


02/03/2004:
	- Added automatic colour spaces conversion for CIELAB images
	  to sRGB in CVT mode.


14/12/2003:
	- Added Content-disposition headers to the JTL,JTLS and CVT output.


10/11/2003:
	- Added missing std:: prefixes to a few STL variables in IIPImage.h
	  and IIPResponse.h.
	- Fixed the TIL command to return only the tiles within the
	  rectangle defined by the specified range rather than all of them.


25/10/2003:
	- Fixed missing value in error message for non decodable tiles
	  in TPTImage.cc and erroneous extra CRLF in the Colorspace
	  reply.


22/10/2003:
	- Changed the IIPImage class to give the horizontal and
	  vertical angles a default value of 0,90 for non-sequence
	  images.


11/10/2003:
	- Removed the new allocator in getFileName() in IIPImage.cc to
	  a statically allocated buffer of size 1024.


04/10/2003:
	- Generalised the metadata handling in Main to cope with any
	  available metadata.
	- Changed the way Basic-info and Summary-info work to simply
	  add more objects to the request string rather than try to
	  handle it themselves. Nicely eliminates duplicate handler code
	  without introducing classes or external functions for each obj.
	- Also fixed the server capability return code to follow the IIP
	  spec properly.


03/10/2003:
	- Added tracking of image data to the IIPResponse class. In this
	  way, we can print an error if we have an uncomplete command
	  syntax. eg. a WID without a CVT. We should now never not have
	  some sort of response from the server.
	- Also added Author, Subject etc metadata handling to IIPImage
	  and the necessary handlers to IIPResponse.


15/09/2003:
	- Added doxygen compatible comments to the header files. The
	  generated documentation is in the doc subdirectory.
	- Changed sprintf to snprintf in Main.cc for the vertical-views
	  handler; snprintf is already used everywhere else.
	- Added IIPResponse class to handle message passing back to the
	  client from OBJ requests. This allows for better error and
	  mime header handling and eliminates having to use FCGX_Fprintf.
	- Added SIGHUP handling to the other signals handled - we simply
	  exit and allow mod_fastcgi to restart us.
	- Added support for IIP-opt-comm and IIP-opt-obj requests.
	- Removed the deprecated Max-sequence and Vertical-views object
	  handlers.


12/09/2003: Version 0.9.4 release.
	- Added content-type heading to error returns.
	- Added default catch() clause to the end of the main try block.


11/09/2003:
	- Added Base64 URL decoding for the image path argument supplied
	  to the FIF command.
	- Cleanups to eliminate most GCC -Wall warnings.


10/09/2003:
	- Changed tolower to ::tolower to fix compilation problem using
	  GCC 3x.
	- Logging cleanup.


08/09/2003:
	- Major cleanup up the JPEGCompressor class.
	- Added bits per pixel to the IIPImage copy constructors.
	- Used the new JPEG buffer-buffer functions to add support for the
	  CVT command (limited to JPEG output only).


07/09/2003:
	- Modified the JPEGCompressor class to allow stream-based buffer
	  to buffer encoding via 3 new functions (init, compressstrip and
	  finish).


03/09/2003:
	- Fixed bug in TPTImage.cc. Added TIFFGetField commands for tile_width
	  and tile_height so that they get reset to the correct value even if
	  we loop through the end of a row.
	- Added a bits per pixel field to the IIPImage class.


02/09/2003:
	- Fixed mis-placed jpeg_set_defaults in JPEGCompressor.cc.
	  Was being called after some individual values were set. This only
	  seemed affected the dct_method. Should compress faster now.


28/08/2003:
	- Added WID and HEI command support.


25/08/2003:
	- Autoconf cleanups. Now properly detect for JPEG and TIFF.


24/08/2003:
	- Improvements to the configure script. Can now completely disable
	  the dynamic module loading code from even compiling.
	- The FCGI development library is now included in the distribution
	  for convenience and is integrated into the top-level configure
	  system. It is only used if it is not found on the computer.


22/08/2003:
	- Added extra variable to track the current vertical position as
	  well as the horizontal. Fixes bug when switching between vertical
	  angles on sequence zero.	
	- XHTMLified the advertising banner :-)


22/03/2003: Version 0.9.3 release.
	- Reworked and cleaned up the TIL compression type and subtype data
	  stream prefix with reference to the FlashPix specification.


21/03/2003:
	- All commands are converted to lower case to handle the java JAI
	  IIP implementation which does not properly follow the spec.
	- Also fixed typo in the Colorspace OBJ reply.


15/03/2003:
	- Modifications to the JPEGCompressor constructor to take only the
	  Q factor. Plus the environment variable JPEG_QUALITY can
	  set the default Q factor.
	- Plus added an #undef HAVE_STDLIB_H to JPEGCompressor.h which was
	  interfering with libjpeg. No compiler warnings now even
	  with -pendantic set :-)


13/03/2003:
	- Added extended colour space handling. The TIFF image now has its
	  colourspace extracted and a ColourSpace enum type now exists.
	  Greyscale, RGB and CIELAB are now handled, though the latter is not
	  in the official IIP spec.


10/03/2003:
	- Changed RawTile copy constructor to use memcpy instead of looping
	  through an array: Big speed improvement :-)


08/03/2003:
	- Added USR1 and TERM signal handling to main loop: We now have some
	  stats printed in the logfile on shutdown.
	- Modified IIPImage to accept a filename pattern variable, so that
	  the "_pyr_" image sequence pattern can be user modified.
	- Plus started work on a new tile cache system, but seems very slow,
	  so will mothball it till after the forthcoming release.


10/11/2002: 
	- Changes to some header files etc to make it compatible with gcc 3.2:
	  Mainly STL string specifiers, plus replacement of slist type
	  with std::list.


24/03/2002
        - Changed error handling to follow IIP return code specification
          for unsupported objects and commands. Should do this for
	  each individual exception also.
        - Added runtime configuration variable for max image cache size.


18/03/2002: Version 0.9.2 release.
	- Changes to JPEGCompressor.cc: Fixed bug when encoding very small
	  tiles. Sometimes the JPEG data is larger than the original
	  so we need to allocate some extra memory just in case.
	- Also fixed the iip_empty_output_buffer( j_compress_ptr cinfo )
	  function. Now properly empties the buffer and returns TRUE.	
	- The Compress() routine now passes the entire image buffer array
	  into jpeg_write_scanlines rather than doing it row by
	  row. The row array is dynamically allocated and deleted
	  at the end.
	- Added proper copy constructor to RawTile class to properly copy
	  data without leaving dangling pointers.


09/08/2001:
	- Added time stamp.
	- Some minor changes to the JPEG wrapper - a couple of ints
	  changed to size_t's and a conditional added just before
	  the memcopy code.


07/07/2001: Version 0.9.1 release.
	- Added field for number of bands in Rawtile.h, so that we can now
	  view 1-band black and white as well as 3-band colour images
	- Added missing JTL command handler for single non-sequential images
	  This does the same as JTLS command, but supplies 0 for sequence
	  and angle.


05/03/2001: Version 0.9 release.
	- Bug fixes: moving IIPImage objects in the cache was resulting
	  in lost information.
	- DSOImage memory bug. Modules should handle their own cleanup
	  in close_image, which is now called by the ~DSOImage


04/03/2001:
	- Changed ModuleLoader to a DSOImage derived class of IIPImage.
	- Use a STL map of image type to module path keywords instead
	  of trying to store caches of DSOImages.
	- Clean up and rationalisation of IIPImage class and derived
	  classes.


01/03/2001:
	- Added tokenizer class.
	- Now checks for variables passed to fcgi at start up time
	  via --initial-env directive within Apache.
	- Added basic ModuleLoader class for loading external image decoders.
	- Fixes so that it no longer crashes even with null input query etc.
	- Removed ifdef DEBUG stuff.


27/02/2001:
	- Added Tile-size directive and related IIPImage::getTileWidth() etc.
	- Allowing for various tile sizes to be used :)
	- Improved logfile reporting.
